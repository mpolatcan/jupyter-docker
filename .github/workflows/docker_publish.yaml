name: Jupyter and JupyterLab Docker Image Publish

on: [push]

jobs:
  build-base-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: [jupyter, jupyterlab]
        node_version: [13]
        python_version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v1
      - run: echo ${{secrets.DOCKER_PASSWORD}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
      - run: docker build -q
          -t ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:base-python${{matrix.python_version}}
          --build-arg PYTHON_VERSION=${{matrix.python_version}}
          --build-arg NODE_VERSION=${{matrix.node_version}}
          src/${{matrix.repository}}/base
      - run: docker push ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:base-python${{matrix.python_version}}
      - run: docker rmi ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:base-python${{matrix.python_version}}

  build-general-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: [jupyter, jupyterlab]
        tier: [general]
        python_version: [3.6, 3.7, 3.8]
    needs: build-base-images
    steps:
      - uses: actions/checkout@v1
      - run: echo ${{secrets.DOCKER_PASSWORD}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
      - run: docker build -q
          -t ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:${{matrix.tier}}-python${{matrix.python_version}}
          --build-arg PYTHON_VERSION=${{matrix.python_version}}
          src/${{matrix.repository}}/${{matrix.tier}}
      - run: docker push ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:${{matrix.tier}}-python${{matrix.python_version}}
      - run: docker rmi ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:${{matrix.tier}}-python${{matrix.python_version}}

  build-spark-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: [jupyter, jupyterlab]
        tier: [spark]
        python_version: [3.6, 3.7, 3.8]
    needs: build-general-images
    steps:
      - uses: actions/checkout@v1
      - run: echo ${{secrets.DOCKER_PASSWORD}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
      - run: docker build -q
          -t ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:${{matrix.tier}}-python${{matrix.python_version}}
          --build-arg PYTHON_VERSION=${{matrix.python_version}}
          src/${{matrix.repository}}/${{matrix.tier}}
      - run: docker push ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:${{matrix.tier}}-python${{matrix.python_version}}
      - run: docker rmi ${{secrets.DOCKER_USERNAME}}/${{matrix.repository}}:${{matrix.tier}}-python${{matrix.python_version}}
